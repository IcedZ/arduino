C51 COMPILER V8.16   MAIN                                                                  01/05/2011 01:35:37 PAGE 1   


C51 COMPILER V8.16, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2           * 超声波测距模块(CX20106+4069版本)
   3           * 
   4           * 用途：超声波测距模块测试程序
   5           * 
   6           * 作者                                 日期                            备注
   7           * Huafeng Lin                  20011/01/05                     新增
   8           * Huafeng Lin                  20011/01/05                     修改
   9           * 
  10           */
  11          
  12          #include<reg51.h>
  13          #include<INTRINS.H>
  14          
  15          #define uchar unsigned char
  16          #define uint  unsigned int
  17          
  18          #define nop                     _nop_()
  19          
  20          #define LCM_Data     P2    //数据接口
  21          #define Busy         0x80   //用于检测LCM状态字中的Busy标识
  22          
  23          uint    dis;
  24          uchar   flag=0,high_time,low_time;
  25          
  26          sbit    in=P3^3;        //外部中断1，接CX20106的7脚
  27          sbit    csb=P1^0;       //40KHz方波输出脚
  28          
  29          sbit    LCM_RW     = P0^1;  //读写控制输入端，LCD1602的第五脚
  30          sbit    LCM_RS     = P0^2;  //寄存器选择输入端，LCD1602的第四脚
  31          sbit    LCM_E      = P0^0;  //使能信号输入端,LCD1602的第6脚
  32          
  33          void    WriteDataLCM            (uchar WDLCM);          //LCD模块写数据
  34          void    WriteCommandLCM (uchar WCLCM,BuysC);    //LCD模块写指令
  35          uchar   ReadDataLCM             (void);         //LCD模块读数据
  36          uchar   ReadStatusLCM   (void);         //读LCD模块的忙标
  37          void    DisplayOneChar   (uchar X,uchar Y,uchar ASCII);         //在第X+1行的第Y+1位置显示一个字符
  38          void    DisplayListChar  (uchar X,uchar Y,uchar delayms,uchar code *DData);
  39          void    DisplayCursorPos (uchar X, uchar Y);
  40          void    LCMInit          (void);
  41          void    DisplayIntData   (uchar X, uchar Y,int ZhengShu,uchar Digit,uchar XiaoShu);
  42          void    DisplayCharData  (uchar X, uchar Y,uchar ZiFu);
  43          
  44          void DelayUs(uint us);
  45          void DelayMs(uint Ms);
  46          
  47          void    init(void);                     //初始化
  48          void    delay_nms(uint n);      //延时nms
  49          void    display(uint dat);      //显示函数
  50          void    tran(void);                     //发射超声波
  51          void    delay100us();           //延时100us
  52          
  53          /**********************************
  54          函数名称：初始化函数
  55          修改日期：
C51 COMPILER V8.16   MAIN                                                                  01/05/2011 01:35:37 PAGE 2   

  56          入口参数：无
  57          返回值：  无
  58          **********************************/
  59          void init(void)
  60          {
  61   1              TMOD=0x01;//定时器0方式1用于计时，定时器1用于产生38K方波
  62   1              TH0=0;
  63   1              TL0=0;          /* 设定T0的工作模式为2*/
  64   1              EA=1;
  65   1              IT1=1;//下降沿有效,左传感器
  66   1      }
  67          /**********************************
  68          函数名称：延时函数
  69          修改日期：
  70          入口参数：n
  71          返回值：  无
  72          **********************************/
  73          void delay_nms(uint n)
  74          {
  75   1              uchar i; 
  76   1            while(n--)
  77   1            {
  78   2                for(i = 0; i < 123; i++);
  79   2             }                                ;
  80   1      }
  81          /************************************************
  82          延时100us函数
  83          ***********************************************/
  84          void delay100us()
  85          {
  86   1              uchar j;
  87   1              for(j=50;j>0;j--);
  88   1      }
  89          /**********************************
  90          函数名称：超声波发射函数
  91          修改日期：
  92          入口参数：无
  93          返回值：  无
  94          **********************************/
  95          void tran(void)
  96          {
  97   1              uchar i;
  98   1              float temp;
  99   1              TH0=0;
 100   1              TL0=0;//清定时0
 101   1              TR0=1;//开定时0
 102   1              for(i=8;i>0;i--)
 103   1              {
 104   2                      csb=!csb;
 105   2                      //nop;
 106   2                      //nop;
 107   2                      nop;
 108   2                      nop;
 109   2                      nop;
 110   2                      nop;
 111   2                      nop;
 112   2                      nop;
 113   2                      nop;
 114   2                      nop;
 115   2              }
 116   1              csb=1;
 117   1              delay_nms(1);//延时1ms左右后再开中断，避免直接回来的回波
C51 COMPILER V8.16   MAIN                                                                  01/05/2011 01:35:37 PAGE 3   

 118   1              EX1=1;
 119   1              delay_nms(50);
 120   1              if(flag==1)
 121   1              {
 122   2                      temp=high_time*256+low_time;
 123   2                      temp=(temp/1000)/2;
 124   2                      temp*=344;
 125   2                      temp=temp/10;
 126   2                      //if(temp>10)
 127   2                      dis=(unsigned int)temp;
 128   2                      flag=0;
 129   2              }
 130   1              //else dis=0;
 131   1      }
 132          /**********************************
 133          函数名称：中断函数
 134          修改日期：
 135          入口参数：无
 136          返回值：  无
 137          **********************************/
 138          void TT() interrupt 2
 139          {
 140   1              uint tmp;
 141   1              TR0=0;//关定时器0
 142   1              ET1=0;//关外部中断
 143   1              //flag=1;//外部中断标志位
 144   1              tmp=TH0*256+TL0;
 145   1              if((tmp>0)&&(tmp<60000))        
 146   1              {
 147   2                      high_time=TH0;
 148   2                      low_time=TL0;
 149   2                      flag=1; 
 150   2              }
 151   1              else 
 152   1              {
 153   2                      high_time=0;
 154   2                      low_time=0;     
 155   2              } 
 156   1      }
 157          
 158          /*===========================================================================
 159           主程序
 160          =============================================================================*/
 161          void main(void)
 162          {
 163   1              uchar i;
 164   1              uint tp=0;
 165   1              init();
 166   1              LCMInit();
 167   1              DisplayOneChar(1,10,'M');
 168   1              DisplayListChar(0,0,0,"LCSOFT (C) 2011");
 169   1              while(1)
 170   1              {
 171   2                      tran();
 172   2                      for(i=100;i>0;i--)
 173   2                      {
 174   3                              DisplayIntData(1,9,dis,4,2);
 175   3                      }        
 176   2              }
 177   1      }        
 178          /*====================================================================  
 179          功 能：    在1602显示一个整数数据 
C51 COMPILER V8.16   MAIN                                                                  01/05/2011 01:35:37 PAGE 4   

 180          说 明：    显示一个整数数据-9999->32625.  从右至左显示数据5位：    
 181          ======================================================================*/
 182          void DisplayIntData(uchar X, uchar Y,int ZhengShu,uchar Digit,uchar XiaoShu)
 183          {
 184   1            uchar i=0,k=0, BCD[5]={0};
 185   1                if(Digit>5)  Digit=5;
 186   1            if(ZhengShu<0)
 187   1                {
 188   2               k=1;//负数示志位
 189   2               ZhengShu=-ZhengShu;
 190   2                }
 191   1            BCD[4]  =  ZhengShu / 10000;         //求出万位数据
 192   1            ZhengShu = ZhengShu % 10000;
 193   1            BCD[3]  =  ZhengShu / 1000;          //求出千位数据
 194   1            ZhengShu = ZhengShu % 1000;
 195   1            BCD[2]  =  ZhengShu / 100;           //求出百位数据
 196   1            ZhengShu = ZhengShu % 100;
 197   1            BCD[1]  =  ZhengShu / 10;            //求出十位数据
 198   1            BCD[0]  =  ZhengShu % 10;            //求出个位数据
 199   1                
 200   1            for(i=0;i<Digit;i++)//输出显示的数值
 201   1            {    
 202   2                     if((i==XiaoShu)&&(0!=XiaoShu))
 203   2                         {  
 204   3                            DisplayOneChar(X,Y-i,'.');//输出小数点 
 205   3                                Y= Y-1; 
 206   3                          } 
 207   2                               
 208   2                     DisplayOneChar(X,Y-i,BCD[i]+0x30); //显示一个字符
 209   2                }
 210   1            if(k==1)
 211   1                DisplayOneChar(X,Y-1,'-');//输出负符
 212   1      }
 213          /*==================================================================== 
 214          功 能：在1602显示一个字符数据 
 215          说 明：显示一个字符数据0~256.  从左至右显示数据3位
 216          ======================================================================*/
 217          void DisplayCharData(uchar X, uchar Y,uchar ZiFu)
 218          {
 219   1            uchar i=0;
 220   1            uchar ValueBCD[3];
 221   1            ValueBCD[0]  = ZiFu / 100;           //求出百位数据
 222   1                    ZiFu = ZiFu % 100;
 223   1            ValueBCD[1]  = ZiFu / 10;            //求出十位数据
 224   1            ValueBCD[2]  = ZiFu % 10;            //求出个位数据
 225   1                
 226   1            for(i=0;i<3;i++)//输出显示的数值
 227   1            {         
 228   2                     DisplayOneChar(X,Y+i,ValueBCD[i]+0x30); //显示一个字符
 229   2                }
 230   1      }
 231          /*======================================================================
 232           LCM初始化
 233          ======================================================================*/
 234          void LCMInit(void) 
 235          {
 236   1       LCM_Data = 0;
 237   1       WriteCommandLCM(0x38,0); //三次显示模式设置，不检测忙信号
 238   1       DelayMs(5);
 239   1       WriteCommandLCM(0x38,0);
 240   1       DelayMs(5);
 241   1       WriteCommandLCM(0x38,0);
C51 COMPILER V8.16   MAIN                                                                  01/05/2011 01:35:37 PAGE 5   

 242   1       DelayMs(5);
 243   1       WriteCommandLCM(0x38,1); //显示模式设置,开始要求每次检测忙信号
 244   1       WriteCommandLCM(0x08,1); //关闭显示
 245   1       WriteCommandLCM(0x01,1); //显示清屏
 246   1       WriteCommandLCM(0x06,1); // 显示光标移动设置
 247   1       WriteCommandLCM(0x0C,1); // 显示开及光标设置
 248   1       
 249   1       DelayMs(100);
 250   1      }
 251          /*====================================================================
 252             显示光标的位置
 253          ====================================================================*/
 254          void DisplayCursorPos( unsigned char X, unsigned char Y)
 255          {
 256   1       X &= 0x1;
 257   1       Y &= 0xF; //限制Y不能大于15，X不能大于1
 258   1       if (X) Y |= 0x40; //当要显示第二行时地址码+0x40;
 259   1       Y |= 0x80; // 算出指令码
 260   1       WriteCommandLCM(Y, 1); //这里不检测忙信号，发送地址码
 261   1      }
 262          /*====================================================================  
 263            按指定位置显示一串字符:第 X 行,第 y列
 264            注意:字符串不能长于16个字符
 265          ======================================================================*/
 266          void DisplayListChar(uchar X,uchar Y,uchar delayms, uchar code *DData)
 267          {
 268   1       unsigned char ListLength;
 269   1      
 270   1       ListLength = 0;
 271   1      
 272   1       X &= 0x1;
 273   1       Y &= 0xF; //限制X不能大于15，Y不能大于1
 274   1       while (DData[ListLength]!='\0') //若到达字串尾则退出
 275   1        { 
 276   2           if (Y <= 0xF) //X坐标应小于0xF
 277   2           {
 278   3              DisplayOneChar(X, Y, DData[ListLength]); //显示单个字符
 279   3              ListLength++;
 280   3              Y++;
 281   3                  DelayMs(delayms);//延时显示字符串
 282   3           }
 283   2           else
 284   2                  break;//跳出循环体
 285   2        }
 286   1      }
 287          /*====================================================================
 288            设定延时时间:x*1us
 289          ====================================================================*/
 290          void DelayUs(uint us)
 291          {
 292   1          while(us--);
 293   1      } 
 294          /*====================================================================
 295            设定延时时间:x*1ms
 296          ====================================================================*/
 297          void DelayMs(uint Ms)
 298          {
 299   1        uint i,TempCyc;
 300   1        for(i=0;i<Ms;i++)
 301   1        {
 302   2          TempCyc = 250;
 303   2          while(TempCyc--);
C51 COMPILER V8.16   MAIN                                                                  01/05/2011 01:35:37 PAGE 6   

 304   2        }
 305   1      }                                 
 306          /*=====================================================================
 307           写数据函数: E =高脉冲 RS=1 RW=0
 308          ======================================================================*/
 309          void WriteDataLCM(unsigned char WDLCM)
 310          {
 311   1       ReadStatusLCM(); //检测忙
 312   1       LCM_Data = WDLCM;
 313   1       LCM_RS = 1;
 314   1       LCM_RW = 0;
 315   1       LCM_E = 0; //若晶振速度太高可以在这后加小的延时
 316   1       LCM_E = 0; //延时
 317   1       LCM_E = 1;
 318   1      }
 319          /*====================================================================
 320            写指令函数: E=高脉冲 RS=0 RW=0
 321          ======================================================================*/
 322          void WriteCommandLCM(unsigned char WCLCM,BuysC) //BuysC为0时忽略忙检测
 323          {
 324   1       if (BuysC) ReadStatusLCM(); //根据需要检测忙
 325   1       LCM_Data = WCLCM;
 326   1       LCM_RS = 0;
 327   1       LCM_RW = 0;
 328   1       LCM_E = 0;
 329   1       LCM_E = 0;
 330   1       LCM_E = 1;
 331   1      }
 332          /*====================================================================
 333          //读数据
 334          ======================================================================*/
 335          unsigned char ReadDataLCM(void)
 336          {
 337   1       LCM_RS = 1;
 338   1       LCM_RW = 1;
 339   1       LCM_E = 0;
 340   1       LCM_E = 0;
 341   1       LCM_E = 1;
 342   1       return(LCM_Data);
 343   1      }
 344          /*====================================================================
 345            正常读写操作之前必须检测LCD控制器状态:E=1 RS=0 RW=1;
 346            DB7: 0 LCD控制器空闲，1 LCD控制器忙。
 347            读状态
 348          ======================================================================*/
 349          unsigned char ReadStatusLCM(void)
 350          {
 351   1       LCM_Data = 0xFF;
 352   1       LCM_RS = 0;
 353   1       LCM_RW = 1;
 354   1       LCM_E = 0;
 355   1       LCM_E = 0;
 356   1       LCM_E = 1;
 357   1       while (LCM_Data & Busy); //检测忙信号  
 358   1       return(LCM_Data);
 359   1      }
 360          /*======================================================================
 361          功 能:     在1602 指定位置显示一个字符:第一行位置0~15,第二行16~31
 362          说 明:     第 X 行,第 y 列  注意:字符串不能长于16个字符
 363          ======================================================================*/
 364          void DisplayOneChar( unsigned char X, unsigned char Y, unsigned char ASCII)
 365          {
C51 COMPILER V8.16   MAIN                                                                  01/05/2011 01:35:37 PAGE 7   

 366   1       X &= 0x1;
 367   1       Y &= 0xF; //限制Y不能大于15，X不能大于1
 368   1       if (X) Y |= 0x40; //当要显示第二行时地址码+0x40;
 369   1       Y |= 0x80; // 算出指令码
 370   1       WriteCommandLCM(Y, 0); //这里不检测忙信号，发送地址码
 371   1       WriteDataLCM(ASCII);
 372   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1004    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
